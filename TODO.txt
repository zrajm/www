-*- org -*-

* TODO Incorrect indent in some cases                                   :BUG:
  Given two <div>s on the same level, the 'hanging' class affects both of them,
  even though it should only affect the latter. There's something fishy about
  how CSS variables function here, I think. :(

    ----------------------------------------
    <div>

    <div class=hanging>
    ----------------------------------------
* TODO Scrollbar issues on short pages
  A page that ends above the fold should have a body that stretches to the
  bottom of the viewport. (So that, for example, any page `<footer>` can be
  placed at the bottom of the viewport in this case.)

  Scrollbar should always be visible (so we don't get janky behavior with a
  scrollbar being added/removed just if page content change to more/less than
  one screenful in length.)
* TODO Scroll-to-top overlay adds blank space below short pages         :BUG:
  A page for which the content fit on the first screen, currently allows user
  to scroll down (into an empty area). This is because the scroll-to-top button
  overlay extends down below the fold, making the browser think that the page
  content is larger than it is.
* TODO CSS: 'rem' units give rounding errors
  There are rounding errors which makes stuff look irregular/ugly sometimes in
  Firefox (something that goes away when you zoom in). For example, the top and
  bottom margins get slightly different widths for the table cell overlay used
  to hilite links when there's only a single link in the cell.

  According to measurements obtained with:

    document.body.insertAdjacentHTML('afterbegin', '<div id=x style=background:#ff0>x')
    document.querySelector('#x').style.width = '1rem'
    document.querySelector('#x').clientWidth

  The following values are currently true (because 1rem = 20px):

  | ⅛ | .125rem | 2.5px = 3px (rounded) |
  | ¼ | .25rem  | 5px                   |
  | ½ | .5rem   | 10px                  |
  | ¾ | .75rem  | 15px                  |
  | 1 | 1rem    | 20px                  |

  Maybe add CSS variables for each measurement used, then set them to rounded
  values? For example:

  --rem       = 20px
  --half-rem  = 10px
  --quart-rem = 5px
  --eight-rem = 3px

  The following shell command lists all used 'rem' values used in 'scent.css':

    <scent.css R 's#<svg\b.*</svg>##g' G -o '[0-9.]+rem' U -c S -nk2

  This works in my customized Zsh, with the following global aliases in effect:

    alias -g G='|grep'
    alias -g R='|perl -Mutf8 -C -pE'
    alias -g S='|sort'
    alias -g U='|LC_ALL=C sort|uniq'
* TODO Table borders
  Table should have border: 1px something-something.
* TODO Table-of-content: Use bullet list with lines(?)
  https://zrajm.org/baremark/
* TODO Table-of-content: Hanging indent
  Very long headings needs some indentation so as to not appear as two headings
  in the table-of-content.

  Maybe set '--is-hanging' in the table-of-content, and then use that for
  `<li>` tags as well?
* TODO Git commit hook verifying that date of 'Updated' header has changed
* TODO `quotecurl()` should be invoked on 'title' attributes too
* TODO Transparent table background
  Currently tables have a background color, but is it possible to have a
  transparent background, and still use scroll shadows? (A transparent
  background would play nicer with the `:target` background coloring.)
* TODO Some images have weird background colors
  http://zrajm.devel/sign-language-writing/#asl-phabet
* TODO Center images with same technique as code blocks & tables?
* TODO Prettier scroll-to-top button?
  The button should maybe resemble the dark mode switch more?
* TODO List should have same spacing as blockquotes
  Numbered and bulleted lists should have the number/bullet have the same
  horizontal spacing as the left (colored) border of the blockquote.
* TODO On big screen: Put tables-of-content in sidebar
* TODO URL comments in CSS should be in docs
  The origin of various little tricks are given in CSS comments, but they
  should be in the docs file.
* TODO Test/verify Chrome scrollbar
* TODO References to `.img` in CSS?
  Possibly replace with `:has(img:only-child)`? Nope, won't work. `:only-child`
  matches as long as it is the only subelement, however, other text does not
  affect the match.

  E.g. `<td>lext <a href="...">link</a</td>` would be matched by td `a:only-link`.
* TODO Verify completeness of docs, add any missing stuff
* FINISHED
** DONE Weed out vertical rhythm stuff
   CLOSED: [2025-06-12 Thu 11:06]
   Remove the DEBUG stuff.
   + Remove `getBaselineFromTop()`
   + Remove `getRhythm()`
** DONE Add scroll-to-top button
   CLOSED: [2025-06-23 Mon 16:06]
   When scrolling beyond the fold a scroll-to-top button should appear in the
   bottom right corner.
** DONE Use `<p>` instead of `<h2>` for subtitle inside `<hgroup>`
   CLOSED: [2025-06-24 Tue 01:44]
   `<hgroup>` should not contain multiple headings, but only a single heading
   with optional preceding or following `<p>` tags, so the way we previously
   did this was wrong.

   The `<hgroup>` HTML element represents a heading and related content. It
   groups a single `<h1>`–`<h6>` element with one or more `<p>`.

   https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/hgroup
** DONE Wrap each chapter (heading + text) in `<div>`
   CLOSED: [2025-06-24 Tue 05:59]
   Wrap each heading & its content in a `<div>` tag, moving the `id` attribute
   of the `<h#>` tag to the wrapping `<div>` instead. (This is so that a CSS
   `:target` can hilite the entire section instead of just the heading.)

   Originally the intent was to use `<section>` tags here, not `<div>` tags.
   But the `<section>` is fraught with troubles in most browsers (it'll
   currently modify the size of any `<h1>` inside of it, but also display a
   deprecation warning in the Firefox developers console).
** DONE Put only `www` directory + template file in Git
   CLOSED: [2025-06-24 Tue 11:07]
   Ideally one should be able to check the entirety of this repo out as a
   `www/` directory, and then copy an empty `template.html` file from there to
   start a new project.

   In this repo there should also be a Git commit hook script available (which
   is easily installable) which verifies that the `Update:` header has been
   updated when committing an HTML file.
** [12/12] Classes for indent modes
   It should be possible to wrap (e.g. the paragraphs of a glossary) in
   something like `<div class=hanging>` to get hanging indent for those
   paragraphs. Specifying `<p class=hanging>` for an individual paragraph
   should also work.

   What should the modes be called?

   Paragraph mode: There are three modes, controlled by the following HTML
   attributes. Is inherited, so you can wrap any number of paragraphs with a
   <div hanging>.

     'book'    -- separate paragraphs by indenting first line, except for first
                  paragraph (default)
     'blank'   -- separated by blank lines
     'hanging' -- hanging indent (default in tables)
     'contd'   -- continued hanging indent

  Should text in tables be indented according to the current indent mode?
*** DONE Support 'book', 'hanging' & 'blank'
    CLOSED: [2025-06-29 Sun 17:27]
*** DONE Fixed vertical space on first/last `<p>` inside `<div>`
    CLOSED: [2025-06-30 Mon 21:19]
*** DONE Rename variables and invert logic
    CLOSED: [2025-07-01 Tue 02:33]
    Variable names `--book-keep` and `--hanging-keep` are hard to understand.
    Rename these `--is-book` and `--is-hanging` and invert their logic. The `is`
    prefix makes it obvious that they are Boolean values, setting them to `1`
    (true) in respective mode is more intuitive than having the logic being
    inverted.
*** DONE Add 'contd' indent class
    CLOSED: [2025-07-01 Tue 02:34]
*** DONE Allow `<script>` and `<style>` tags in runs of `<p>`?
    CLOSED: [2025-07-01 Tue 03:37]
    One `<script>` and/or `<style>` tag may now be inserted between any `<p>`
    tags without affecting how the CSS adds 'text-indent' to book indented
    `<p>`s.
*** DONE Document the metadata stuff!
    CLOSED: [2025-07-01 Tue 04:34]
*** DONE Insert the actual vertical margins (not 1rem)
    CLOSED: [2025-07-01 Tue 04:44]
*** DONE Fix `margin-top` rules
    CLOSED: [2025-07-03 Thu 05:14]
*** DONE Fix `margin-bottom` rules
    CLOSED: [2025-07-09 Wed 19:21]
*** DONE Blank `<div></div>` between paragraphs should result in blank
    CLOSED: [2025-07-09 Wed 19:21]
    Should our old `<p><p>` trick also work?
*** DONE Merge `paragraphs.css` into `main.css`
    CLOSED: [2025-07-09 Wed 21:09]
*** DONE Added scroll-margin to :target
    CLOSED: [2025-07-20 Sun 07:41]
    https://codersblock.com/blog/anchor-links-and-how-to-make-them-awesome/
** DONE Dispatched 'scent:done' event on finishing
   CLOSED: [2025-08-23 Sat 18:25]
** DONE Renamed files: `main.js` -> `scent.js`, `main.css` -> `scent.css`
   CLOSED: [2025-08-23 Sat 00:00]
   Also added compatibility symlinks (for now).
** DONE Load Javascript CSS earlier
   CLOSED: [2025-08-23 Sat 21:01]
** DONE Better indent-mode class-name detection
   CLOSED: [2025-08-23 Sat 21:01]
   Now a class name is added whenever an indent-mode class-name is missing
   (previously no indent-mode class-name was added if ANY class name was
   specified in the 'Class: <name>' metadata header.
** [3/3] Scroll shadow
*** DONE Center table, but never overflow screen width
    CLOSED: [2025-08-27 Wed 09:00]
    Made it so that tables & code blocks both:

    + center
    + min-with = content width
    + min-width = body width
    + max-width = viewport width
    + scrollbar if wider than viewport

    But code blocks are never narrower than the page.

    * { max-width: 100% }
    pre { min-width: 100% }
    pre, table {
      display: block;
      width: fit-content;
      max-width: calc(100vw - 1rem);
      margin-left: 50%; transform: translateX(-50%); /* center */

      overflow: auto hidden; /* horizontal, but never vertical scrollbars */
    }
*** DONE Make scroll shadow be fully invisible when hidden
    CLOSED: [2025-08-27 Wed 09:53]
    Currently the shadow and the anti-shadow (that neutralizes the shadow when
    there's no more scrolling in that direction) do not completely cancel each
    other out, so that there is a 'ghost shadow' where there should be no
    shadow at all.
*** DONE Use 'radial-gradient' for shadow
    CLOSED: [2025-08-27 Wed 09:54]
    The shadow consist of one shadow (a radial-gradient) on either side which
    stays still as the user scrolls, on top of that there's a shadow cover
    which *does* move with the scroll. The shadow cover is twice as big as the
    shadow, and half of it (a section of the same size as the underlying
    shadow) has the same color as the page background and is completely opaque.
    (This part comes to rest on top of and hide the shadow in the extreme
    scrolling positions.) The other half of the cover is a gradient from page
    background color to complete transparency (so that the shadow fades out
    before disappearing completely).

    This article lists a live example at the end with a gradient scroll shadow,
    which looks kinda nice. Maybe adopt this?
    https://css-tricks.com/scroll-shadows-with-javascript/

    This Codepen in the live example used in the article above:
    https://codepen.io/mindstorm/pen/PoqxXN

    CSS-only scroll shadows:
    https://css-tricks.com/books/greatest-css-tricks/scroll-shadows/

    CSS-only shadow-scrolling effect
    https://codepen.io/evank/pen/wWbRNO
    (this one has a nice shape to the shadow)
* DONE Word-wrapping of PDF/external links icons
  CLOSED: [2025-09-16 Tue 06:03]
  Currently, when links are line-wrapped, the wrapping can occur between the
  link name and the icon that follows. This looks ugly, would it be better not
  to allow that?
* [eof]
